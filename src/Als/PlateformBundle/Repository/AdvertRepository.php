<?php

namespace Als\PlateformBundle\Repository;

use \Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends EntityRepository
{
    public function myFindAll()
    {

////        Methode 1
//        $queryBuilder1 = $this->_em->createQueryBuilder()
//            ->select('a')
//            ->from($this->_entityName, 'a',null);
//
////        Methode 2
//        $queryBuilder2 = $this->createQueryBuilder('a', null);
//
//        $query = $queryBuilder1->getQuery();
//        $query = $queryBuilder2->getQuery();
//
//        $results = $query->getResult();
//
//        return $results;
//        Tout ce qui se trouve plus haut peut etre resume ainsi...
        return $this
            ->createQueryBuilder('a', null)
            ->getQuery()
            ->getResult();
    }

    public function myFindOne($id)
    {
        $qb = $this->createQueryBuilder('a');

        $qb
            ->where('a.id = :id')
            ->setParameter('id', $id)
        ;

        return $qb
            ->getQuery()
            ->getResult()
        ;
    }

    public function findByAuthorAndDate($author, $year)
    {
        $qb = $this->createQueryBuilder('a');

        $qb
            ->where('a.author = :author')
            ->setParameter('author', $author)
            ->andWhere('a.date < :year')
            ->setParameter('date', $year)
            ->orderBy('a.date', 'DESC')
        ;

        return $qb
            ->getQuery()
            ->getResult()
        ;
    }

    public function myFindAuthorInCurrentYear($author)
    {
        $qb = $this->createQueryBuilder('a');

        $qb
            ->where('a.author = :author')
            ->setParameter('author', $author)
        ;

        $this
            ->whereCurrentYear($qb)
            ->orderBy('a.date', 'ASC');

        return $qb
            ->getQuery()
            ->getResult()
        ;        
    }

    public function getAdvertWithApplications()
    {
        $qb = $this
            ->createQueryBuilder('a')
            ->leftJoin('a.applications', 'app')
            ->addSelect('app')
        ;

        return $qb
            ->getQuery()
            ->getResult()
        ;
    }

    public function getAdvertWithCategories(array $categoryNames)
    {
        $qb = $this->createQueryBuilder('a');
        $qb
            ->join('a.categories', 'a')
            ->addSelect('c')
        ;

        // Puis on filtre sur le nom des catégories à l'aide d'un IN
        $qb->where($qb->expr()->in('c.name', $categoryNames));
        // La syntaxe du IN et d'autres expressions se trouve dans la documentation Doctrine

        // Enfin, on retourne le résultat
        return $qb
            ->getQuery()
            ->getResult()
        ;
    }

    public function whereCurrentYear(QueryBuilder $qb)
    {
        return $qb
            ->andWhere('a.date BETWEEN :start AND :end')
            ->setParameter('start', new \Datetime(date('Y').'-01-01'))
            ->setParameter('start', new \Datetime(date('Y').'-12-31'))
        ;
    }
}
